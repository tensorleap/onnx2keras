name: Push to O2K
on: [push]
permissions:
    id-token: write # This is required for requesting the JWT
    contents: read  # This is required for actions/checkout
    issues: write   # permits an action to add a comment to an issue.
    pull-requests: write
jobs:
  update-leap-model-parser:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        id: extract_branch
        run: echo "::set-output name=branch_name::$(echo ${GITHUB_REF#refs/heads/})"
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Get package version from pyproject.toml
        id: package_version
        run: |
          PACKAGE_VERSION=$(awk -F' = ' '$1 == "version" {gsub(/"/, "", $2); print $2}' pyproject.toml | head -n 1)
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "$PACKAGE_VERSION"
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.12
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-1
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Check if version exists on PyPI
        id: check_version
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://pypi.org/pypi/onnx2kerastl/$PACKAGE_VERSION/)
          if [ $RESPONSE -eq 200 ]; then
            echo "Version $PACKAGE_VERSION already exists on PyPI."
            exit 1  # Exit with failure if version exists
          else
            echo "Version $PACKAGE_VERSION does not exist on PyPI."
          fi
      - name: Build and publish package
        if: success()  # Only run this step if the previous steps were successful
        run: |
          poetry build
          poetry publish -u __token__ -p ${{ secrets.PYPI_O2K }}
      - name: checkout leap model parser
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TENSORLEAP_OPS_GITHUB_TOKEN }}
          repository: tensorleap/leap-model-parser
      - name: leap-model-parser testing
        run: |
          echo "Project version is $PACKAGE_VERSION"
          BRANCH="${{ steps.extract_branch.outputs.branch_name }}-from-o2k"
          git config user.email github-actions@github.com
          git config user.name github-actions
          if git fetch origin && git ls-remote --exit-code --heads origin "$BRANCH"; then
              git checkout "$BRANCH"
              git pull origin "$BRANCH"
          else
              git checkout -b "$BRANCH"
          fi
          git push origin "$BRANCH"
          ls -l  # Example command: List files in the checked-out repositor
          echo "1"
